{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "type": "object",
  "title": "Plugin",
  "description": "Plugin manifest schema",
  "required": ["id", "manifest"],
  "properties": {
    "id": {
      "type": "string",
      "description": "The ID of the plugin."
    },
    "version": {
      "type": "string",
      "format": "semver",
      "description": "Plugin Version must be parseable by node-semver."
    },
    "name": {
      "type": "string",
      "description": "The name of the plugin."
    },
    "description": {
      "type": ["string", "null"],
      "description": "The plugin description."
    },
    "homepage": {
      "type": "string",
      "format": "uri",
      "description": "A Web link to the plugin homepage."
    },
    "author": {
      "$ref": "#/definitions/person",
      "description": "Original author of the plugin."
    },
    "license": {
      "type": "string",
      "format": "spdx",
      "description": "Specify a license for your package so that people know how they are permitted to use it, and any restrictions you're placing on it"
    },
    "manifest": {
      "$ref": "#/definitions/Manifest",
      "description": "Plugin manifest"
    }
  },
  "definitions": {
    "Manifest": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
        "supportedOS": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["darwin", "linux", "win32"]
          },
          "description": "Which operating systems the plugin will run on"
        }
      }
    },
    "Person": {
      "oneOf": [{
        "type": "string",
        "pattern": "[a-zA-Z]"
      }, {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Person's mame"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Person's email address"
          },
          "url": {
            "type": "string",
            "format": "url",
            "description": "Person's homepage"
          }
        }
      }],
      "description": "Person type definition"
    }
  },
  "formatters": {
    "PlaylistItem": {
      "type": "string",
      "default": "$.($AccName:=function(){$.contentDetails.duration};$.{'id':id,'title':snippet.title,'name':snippet.title,'artists':[{'id':'sfasdf','name':'nook'}],'description':snippet.description,'thumbnails':snippet.thumbnails,'duration':$parseDuration(contentDetails.duration)})",
      "description": "PlaylistItem formatter"
    },
    "MetaInfo": {
      "type": "string",
      "default": "$.($.{'status':status,'id':video_id,'filename':$toFilename(title),'title':title,'description':description,'related_videos':related_videos,'keywords':keywords,'rating':avg_rating,'views':view_count,'author':author})",
      "description": "ytdl-core MetaInfo formatter"
    }
  }
}
